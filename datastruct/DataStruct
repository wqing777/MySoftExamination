###############################################################################################
###   第一课，进阶高手的大门

	1.数据结构是相互之间存在一定或多种特定关系的数据集合
	
	2.程序 = 数据结构 + 算法
	
	3.算法是程序的灵魂，好的算法会显著的提高程序的运算效率
	
	
###############################################################################################
###   第二课，数据的艺术
	
	1.数据 - 程序的操作对象，用于描述客观事物
	
	2.数据的特点：
		可以输入到计算机
		可以被计算机程序当做参数处理
		
		数据是一个抽象的概念，将其进行分类后得到程序设计语言中的类型。如：int,float,char等等
	
	3.数据元素 - 组成数据的基本单位
		数据项：一个数据元素由若干数据项组成
		
	4.数据对象 - 性质相同的数据元素的集合
	
	5.示例
		struct Student			------数据类型
		{
			char* name;
			int age;
		};
		
		struct Student s;		------数据元素
		
		struct Student stu[100];------数据对象
		
		s.name = "tom";			------数据项
		s.age = 30;
		
	6.数据元素之间不是独立的，存在特定的关系，这些关系即是结构。数据结构指数据对象中数据元素之间的关系
	
	7.数据结构中常见的数据关系 - 逻辑结构
		集合结构
			数据元素之间没有特别的关系，仅属于相同集合
		
		线性结构
			数据元素之间是一对一的关系，如数组
			
		树形结构
			数据元素之间存在一对多的层次关系，如树
			
		图形结构
			数据元素之间是多对多的关系，如图
			
	8.计算机中数据的实际存储方式 - 物理结构
		物理结构
			逻辑结构在计算机中的存储形式
			
		顺序存储结构
			将数据存储在地址连续的存储单元里面
		
		链式存储结构
			将数据存储在任意的存储单元里面，通过保存地址的方式找到相关联的数据元素
			
			
###############################################################################################
###   第三课，程序的灵魂-算法
	
	1.数据结构与算法
		数据结构只是静态的描述了数据元素之间的关系
		高效的程序需要在数据结构的基础上设计和选择算法
		
		高效的程序 = 恰当的数据结构 + 合适的算法
		
	2.算法是特定问题求解步骤的描述，在计算机中表示为指令的有限序列
	
	3.算法是独立存在的一种解决问题的方法和思想
	
	4.对于算法而言，语言并不重要，重要的是思想
	
	5.算法的五大特性
		输入	 -- 算法具有0个或多个输入
		输出	 -- 算法具有1个或多个输出
		有穷性	 -- 算法在有限的步骤之后会自动结束而不会无限循环
		确定性	 -- 算法中的每一步都有特定的含义，不会出现二义性
		可行性 	 -- 算法的每一步都是可行的
		
	6.算法的设计准则
		正确性
			算法对于合法数据能够得到满足要求的结果
			算法能够处理非法输入，并得到合理的结果
			算法对于边界数据和压力数据都能得到满足要求的结果
		
		可读性
			算法需要方便阅读，理解和交流
			
		健壮性
			算法不应该产生莫名其妙的结果
			
		高性价比
			利用最少的时间和资源得到满足要求的结果

			
###############################################################################################
###   第四课，审判数据的灵魂			
			
		

	
	
			
			
			
			
			
			
			
			
			
	
	
	
	
	
	
	
	
			
		
		
		
		
		
		
		
		
		
		
		